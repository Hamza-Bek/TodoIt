Index: WebAPI/Extensions/DependencyInjectionExtensions.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Security.Claims;\r\nusing System.Text;\r\nusing Application.Dtos.Todo;\r\nusing Application.Interfaces;\r\nusing Application.Options;\r\nusing DefaultNamespace;\r\nusing Domain.Models;\r\nusing Infrastructure.Data;\r\nusing Infrastructure.Options;\r\nusing Infrastructure.Repositories;\r\nusing Infrastructure.Services;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing FluentValidation;\r\nusing FluentValidation.AspNetCore;\r\nusing Microsoft.AspNetCore.Authentication.JwtBearer;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing LockoutOptions = Infrastructure.Options.LockoutOptions;\r\nusing PasswordOptions = Infrastructure.Options.PasswordOptions;\r\n\r\nnamespace WebAPI.Extensions;\r\n\r\npublic static class DependencyInjectionExtensions\r\n{\r\n    /// <summary>\r\n    /// Services from Infrastructure layer\r\n    /// </summary>\r\n    /// <param name=\"services\"></param>\r\n    /// <param name=\"configuration\"></param>\r\n    /// <returns></returns>\r\n    public static IServiceCollection AddInfrastructure(this IServiceCollection services, IConfiguration configuration)\r\n    {\r\n        var databaseOptions = new DatabaseOptions();\r\n        configuration.GetSection(\"Database\").Bind(databaseOptions);\r\n\r\n        var passwordOptions = new PasswordOptions();\r\n        configuration.GetSection(\"Password\").Bind(passwordOptions);\r\n\r\n        var lockoutOptions = new LockoutOptions();\r\n        configuration.GetSection(\"Lockout\").Bind(lockoutOptions);\r\n\r\n        services.AddDbContext<ApplicationDbContext>(options =>\r\n            options.UseNpgsql(databaseOptions.ConnectionString, b => b.MigrationsAssembly(\"WebAPI\")));\r\n\r\n        services.AddIdentity<ApplicationUser, ApplicationRole>(options =>\r\n        {\r\n            options.Lockout.AllowedForNewUsers = lockoutOptions.AllowedForNewUsers;\r\n            options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(lockoutOptions.DefaultLockoutTimeSpan);\r\n            options.Lockout.MaxFailedAccessAttempts = lockoutOptions.MaxFailedAccessAttempts;\r\n\r\n            options.Password.RequireDigit = passwordOptions.RequireDigit;\r\n            options.Password.RequireLowercase = passwordOptions.RequireLowercase;\r\n            options.Password.RequireNonAlphanumeric = passwordOptions.RequireNonAlphanumeric;\r\n            options.Password.RequireUppercase = passwordOptions.RequireUppercase;\r\n            options.Password.RequiredLength = passwordOptions.RequiredLength;\r\n            options.Password.RequiredUniqueChars = passwordOptions.RequiredUniqueChars;\r\n        })\r\n        .AddEntityFrameworkStores<ApplicationDbContext>()\r\n        .AddDefaultTokenProviders();\r\n\r\n        var jwtSettings = new JwtSettings();\r\n        configuration.GetSection(\"Jwt\").Bind(jwtSettings);\r\n        services.AddScoped(_ => jwtSettings);\r\n\r\n        var refreshTokenSettings = new RefreshTokenSettings();\r\n        configuration.GetSection(\"RefreshToken\").Bind(refreshTokenSettings);\r\n        services.AddScoped(_ => refreshTokenSettings);\r\n\r\n        var key = Encoding.UTF8.GetBytes(jwtSettings.Secret ?? throw new InvalidOperationException(\"JWT Secret is missing\"));\r\n        \r\n            services.AddAuthentication(options =>\r\n            {\r\n                options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n            })\r\n            .AddJwtBearer(options =>\r\n            {\r\n                options.RequireHttpsMetadata = false;\r\n                options.SaveToken = true;\r\n                options.TokenValidationParameters = new TokenValidationParameters\r\n                {\r\n                    ValidateIssuer = false,\r\n                    ValidateAudience = false,\r\n                    ValidateLifetime = true,\r\n                    ValidateIssuerSigningKey = true,\r\n                    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(jwtSettings.Secret))\r\n                };\r\n            });\r\n        \r\n        return services;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Services from Application layer\r\n    /// </summary>\r\n    /// <param name=\"services\"></param>\r\n    /// <returns></returns>\r\n    public static IServiceCollection AddApplicationServices(this IServiceCollection services)\r\n    {\r\n        services.AddScoped<ITodoRepository, TodoRepository>();\r\n        services.AddScoped<INoteRepository, NoteRepository>();\r\n        services.AddScoped<IFolderRepository, FolderRepository>();\r\n        services.AddScoped<IRefreshTokensRepository, RefreshTokensRepository>();\r\n        services.AddScoped<ITokensService, TokensService>();\r\n        services.AddScoped<IAuthRepository, AuthRepository>();\r\n        \r\n        services.AddValidatorsFromAssemblyContaining<TodoDtoValidator>();\r\n         \r\n        services.AddScoped<UserIdentity>(sp =>\r\n        {\r\n            var userIdentity = new UserIdentity();\r\n            var httpContextAccessor = sp.GetRequiredService<IHttpContextAccessor>();\r\n            var httpContext = httpContextAccessor.HttpContext;\r\n        \r\n            if (httpContext?.User?.Identity?.IsAuthenticated == true)\r\n            {\r\n                var userId = httpContext.User.FindFirstValue(ClaimTypes.NameIdentifier);\r\n                if (Guid.TryParse(userId, out var id))\r\n                    userIdentity.Id = id;\r\n        \r\n            }\r\n            return userIdentity;\r\n        });\r\n        \r\n        return services;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WebAPI/Extensions/DependencyInjectionExtensions.cs b/WebAPI/Extensions/DependencyInjectionExtensions.cs
--- a/WebAPI/Extensions/DependencyInjectionExtensions.cs	(revision c05f1c8ea06ae9c2bd62a6213ae9e599eeb1f3a5)
+++ b/WebAPI/Extensions/DependencyInjectionExtensions.cs	(date 1740601641633)
@@ -122,6 +122,7 @@
             return userIdentity;
         });
         
+        
         return services;
     }
 }
Index: .idea/.idea.TodoIt/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile profileName=\"http\">WebAPI/WebAPI.csproj</projectFile>\r\n    <projectFile profileName=\"https\">WebAPI/WebAPI.csproj</projectFile>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e263bb07-a9de-46f0-b96e-a9ab1505e321\" name=\"Changes\" comment=\"Implement rate limiting with Fixed Window strategy\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.TodoIt/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.TodoIt/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/TodoIt.sln\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/TodoIt.sln\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WebAPI/WebAPI.csproj\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WebAPI/WebAPI.csproj\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"DpaMonitoringSettings\">\r\n    <option name=\"autoShow\" value=\"false\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Hamza-Bek&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Hamza-Bek/TodoIt.git&quot;,\r\n    &quot;accountId&quot;: &quot;93d166b8-a2c8-4291-ac19-571d3757bc74&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/7e7903867c044f1ab43846b2f1406035c910/5e/722d917c/IConfiguration.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/a6b7f037ba7b44df80b8d3aa7e58eeb2e8e938/4e/0aeabc4a/ExceptionDispatchInfo.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/dffdaf205cf54e098aa7d66ba76b38621de920/19/cbf0b8a4/ControllerFactoryProvider.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Infrastructure/Repositories/FolderRepository.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/RepositoryUnitTests/TodoRepositoryTests.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MetaFilesCheckinStateConfiguration\" checkMetaFiles=\"true\" />\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2swZKbA2ntlZ3CYuuOVXj37qUHc\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \".NET Launch Settings Profile.WebAPI: http.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"test/note-unit-tests\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\".NET Launch Settings Profile.WebAPI: http\">\r\n    <configuration name=\"WebAPI: http\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\" temporary=\"true\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/WebAPI/WebAPI.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net9.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"http\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"Implement methods for the Note management\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739371817162</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739371817162</updated>\r\n    </task>\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e263bb07-a9de-46f0-b96e-a9ab1505e321\" name=\"Changes\" comment=\"Implement methods for the Note management\" />\r\n      <created>1740265628541</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1740265628541</updated>\r\n      <workItem from=\"1740265631432\" duration=\"6711000\" />\r\n      <workItem from=\"1740272509636\" duration=\"1996000\" />\r\n      <workItem from=\"1740334608360\" duration=\"6953000\" />\r\n      <workItem from=\"1740542430458\" duration=\"609000\" />\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\r\n  <component name=\"UnityProjectConfiguration\" hasMinimizedUI=\"false\" />\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Implement methods for the Note management\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Implement methods for the Note management\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.TodoIt/.idea/workspace.xml b/.idea/.idea.TodoIt/.idea/workspace.xml
--- a/.idea/.idea.TodoIt/.idea/workspace.xml	(revision c05f1c8ea06ae9c2bd62a6213ae9e599eeb1f3a5)
+++ b/.idea/.idea.TodoIt/.idea/workspace.xml	(date 1740596162256)
@@ -8,10 +8,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e263bb07-a9de-46f0-b96e-a9ab1505e321" name="Changes" comment="Implement rate limiting with Fixed Window strategy">
+    <list default="true" id="e263bb07-a9de-46f0-b96e-a9ab1505e321" name="Changes" comment="Add project files">
       <change beforePath="$PROJECT_DIR$/.idea/.idea.TodoIt/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.TodoIt/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/TodoIt.sln" beforeDir="false" afterPath="$PROJECT_DIR$/TodoIt.sln" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WebAPI/WebAPI.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/WebAPI/WebAPI.csproj" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -24,7 +22,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="main" />
+        <entry key="$PROJECT_DIR$" value="test/note-unit-tests" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -47,6 +45,7 @@
     <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/dffdaf205cf54e098aa7d66ba76b38621de920/19/cbf0b8a4/ControllerFactoryProvider.cs" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Infrastructure/Repositories/FolderRepository.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/RepositoryUnitTests/TodoRepositoryTests.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="mock://E:/2025's projects/TodoIt/WebAPI/Extensions/DependencyInjectionExtensions.cs" root0="SKIP_HIGHLIGHTING" />
   </component>
   <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
   <component name="ProjectColorInfo">{
@@ -57,19 +56,19 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    ".NET Launch Settings Profile.WebAPI: http.executor": "Run",
-    "git-widget-placeholder": "test/note-unit-tests",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "preferences.lookFeel",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;.NET Launch Settings Profile.WebAPI: http.executor&quot;: &quot;Run&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager" selected=".NET Launch Settings Profile.WebAPI: http">
     <configuration name="WebAPI: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile" temporary="true">
       <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/WebAPI/WebAPI.csproj" />
@@ -116,6 +115,7 @@
       <workItem from="1740272509636" duration="1996000" />
       <workItem from="1740334608360" duration="6953000" />
       <workItem from="1740542430458" duration="609000" />
+      <workItem from="1740590118584" duration="1393000" />
     </task>
     <option name="localTasksCounter" value="2" />
     <servers />
