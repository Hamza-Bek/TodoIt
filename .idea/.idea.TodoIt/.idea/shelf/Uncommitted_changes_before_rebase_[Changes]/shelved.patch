Index: WebAPI/WebAPI.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net9.0</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <UserSecretsId>514393cd-46ee-425c-a279-5ded867fb977</UserSecretsId>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"FluentValidation\" Version=\"11.11.0\" />\r\n    <PackageReference Include=\"FluentValidation.AspNetCore\" Version=\"11.3.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"9.0.2\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.OpenApi\" Version=\"9.0.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"9.0.1\">\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\r\n      <PrivateAssets>all</PrivateAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<ProjectReference Include=\"RepositoryUnitTests.csproj\" />\r\n\t</ItemGroup>\t\r\n\t\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"../Infrastructure/Infrastructure.csproj\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Domain\\Domain.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WebAPI/WebAPI.csproj b/WebAPI/WebAPI.csproj
--- a/WebAPI/WebAPI.csproj	(revision c05f1c8ea06ae9c2bd62a6213ae9e599eeb1f3a5)
+++ b/WebAPI/WebAPI.csproj	(date 1740611911998)
@@ -19,7 +19,7 @@
   </ItemGroup>
 
 	<ItemGroup>
-		<ProjectReference Include="RepositoryUnitTests.csproj" />
+		<ProjectReference Include="..\RepositoryUnitTests\RepositoryUnitTests.csproj" />
 	</ItemGroup>	
 	
   <ItemGroup>
Index: WebAPI/Controllers/TodosController.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Application.Dtos.Todo;\r\nusing Application.Interfaces;\r\nusing Application.Mappers;\r\nusing Application.Responses;\r\nusing Domain.Models;\r\nusing FluentValidation;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Mvc;\r\n\r\nnamespace WebAPI.Controllers;\r\n\r\n\r\n[Route(\"api/[controller]\")]\r\n[ApiController]\r\npublic class TodosController : ControllerBase\r\n{\r\n    private readonly ITodoRepository _todoRepository;\r\n    private readonly IValidator<TodoDto> _todoValidator;\r\n\r\n    public TodosController(ITodoRepository todoRepository, IValidator<TodoDto> todoValidator)\r\n    {\r\n        _todoRepository = todoRepository;\r\n        _todoValidator = todoValidator;\r\n    }\r\n\r\n    [HttpGet(\"get/all\")]\r\n    public async Task<IActionResult> GetTodos([FromQuery] TodoFilterCriteria filterCriteria, CancellationToken cancellationToken)\r\n    {\r\n        var response = await _todoRepository.GetTodosAsync(filterCriteria, cancellationToken);\r\n\r\n        return Ok(new ApiResponse<IEnumerable<Todo>>(\r\n            \"Todos retrieved successfully\",\r\n            true,\r\n            response\r\n        ));\r\n    }\r\n\r\n    [HttpGet(\"get\")]\r\n    public async Task<IActionResult> GetTodoById([FromQuery]Guid todoId)\r\n    {\r\n        var todo = await _todoRepository.GetTodoByIdAsync(todoId);\r\n\r\n        if (todo == null)\r\n        {\r\n            return NotFound(new ApiErrorResponse(\r\n                \"Todo not found\"\r\n            ));\r\n        }\r\n\r\n        return Ok(new ApiResponse<Todo>(\r\n            \"Todo retrieved successfully\",\r\n            true,\r\n            todo\r\n        ));\r\n    }\r\n\r\n    [HttpPost(\"add\")]\r\n    public async Task<IActionResult> AddTodo([FromBody] TodoDto model)\r\n    {\r\n        var validationResult = await _todoValidator.ValidateAsync(model);\r\n        if (!validationResult.IsValid)\r\n        {\r\n            return BadRequest(new ApiErrorResponse(\r\n                validationResult.Errors.First().ErrorMessage\r\n            ));\r\n        }\r\n\r\n        var todo = await _todoRepository.AddTodoAsync(model.ToModel());\r\n\r\n        return Ok(new ApiResponse<TodoDto>(\r\n            \"Todo added successfully\",\r\n            true,\r\n            todo.ToDto()\r\n        ));\r\n    }\r\n\r\n    [HttpPut(\"update\")]\r\n    public async Task<IActionResult> UpdateTodo([FromQuery]Guid id,[FromBody]TodoDto model)\r\n    {\r\n        var validationResult = await _todoValidator.ValidateAsync(model);\r\n        if (!validationResult.IsValid)\r\n        {\r\n            return BadRequest(new ApiErrorResponse(\r\n                validationResult.Errors.First().ErrorMessage\r\n            ));\r\n        }\r\n\r\n        var todo = await _todoRepository.UpdateTodoAsync(id, model.ToModel());\r\n\r\n        if (todo == null)\r\n            return NotFound(new ApiErrorResponse(\r\n                \"Todo not found\"\r\n            ));\r\n\r\n\r\n        return Ok(new ApiResponse<TodoDto>(\r\n            \"Todo updated successfully\",\r\n            true,\r\n            todo.ToDto()\r\n        ));\r\n    }\r\n\r\n    [HttpDelete(\"delete\")]\r\n    public async Task<IActionResult> DeleteTodo(Guid id)\r\n    {\r\n        var response = await _todoRepository.DeleteTodoAsync(id);\r\n\r\n        if (!response)\r\n        {\r\n            return NotFound(new ApiErrorResponse(\r\n                \"Todo not found\"\r\n            ));\r\n        }\r\n\r\n        return Ok(new ApiResponse(\r\n            \"Todo deleted successfully\",\r\n            true\r\n        ));\r\n    }\r\n\r\n    [HttpPost(\"reschedule\")]\r\n    public async Task<IActionResult> RescheduleTodos([FromBody] RescheduleTodosRequest request)\r\n    {\r\n        await _todoRepository.RescheduleTodosAsync(request.Todos, request.NewDate);\r\n\r\n        return Ok(new ApiResponse(\r\n            \"Todos rescheduled successfully\",\r\n            true\r\n        ));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WebAPI/Controllers/TodosController.cs b/WebAPI/Controllers/TodosController.cs
--- a/WebAPI/Controllers/TodosController.cs	(revision c05f1c8ea06ae9c2bd62a6213ae9e599eeb1f3a5)
+++ b/WebAPI/Controllers/TodosController.cs	(date 1740613953688)
@@ -6,12 +6,15 @@
 using FluentValidation;
 using Microsoft.AspNetCore.Authorization;
 using Microsoft.AspNetCore.Mvc;
+using Microsoft.AspNetCore.RateLimiting;
 
 namespace WebAPI.Controllers;
 
 
+[EnableRateLimiting("authenticated")]
 [Route("api/[controller]")]
 [ApiController]
+[Authorize]
 public class TodosController : ControllerBase
 {
     private readonly ITodoRepository _todoRepository;
@@ -22,7 +25,7 @@
         _todoRepository = todoRepository;
         _todoValidator = todoValidator;
     }
-
+    
     [HttpGet("get/all")]
     public async Task<IActionResult> GetTodos([FromQuery] TodoFilterCriteria filterCriteria, CancellationToken cancellationToken)
     {
Index: WebAPI/Program.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using WebAPI.Extensions;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\n// Add services to the container.\r\nbuilder.Services.AddInfrastructure(builder.Configuration);\r\nbuilder.Services.AddApplicationServices();\r\n\r\nbuilder.Services.AddControllers();\r\nbuilder.Services.AddOpenApi();\r\n\r\nvar app = builder.Build();\r\n\r\n// Configure the HTTP request pipeline.\r\nif (app.Environment.IsDevelopment())\r\n{\r\n    app.MapOpenApi();\r\n}\r\n\r\napp.UseHttpsRedirection();\r\n\r\napp.UseAuthentication();\r\n\r\napp.UseAuthorization();\r\n\r\napp.MapControllers();\r\n\r\napp.Run();\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WebAPI/Program.cs b/WebAPI/Program.cs
--- a/WebAPI/Program.cs	(revision c05f1c8ea06ae9c2bd62a6213ae9e599eeb1f3a5)
+++ b/WebAPI/Program.cs	(date 1740613843101)
@@ -9,6 +9,8 @@
 builder.Services.AddControllers();
 builder.Services.AddOpenApi();
 
+builder.Services.AddCustomRateLimiter();
+
 var app = builder.Build();
 
 // Configure the HTTP request pipeline.
@@ -17,6 +19,8 @@
     app.MapOpenApi();
 }
 
+app.UseRateLimiter();
+
 app.UseHttpsRedirection();
 
 app.UseAuthentication();
Index: .idea/.idea.TodoIt/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile profileName=\"http\">WebAPI/WebAPI.csproj</projectFile>\r\n    <projectFile profileName=\"https\">WebAPI/WebAPI.csproj</projectFile>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e263bb07-a9de-46f0-b96e-a9ab1505e321\" name=\"Changes\" comment=\"Implement rate limiting with Fixed Window strategy\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.TodoIt/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.TodoIt/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/TodoIt.sln\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/TodoIt.sln\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WebAPI/WebAPI.csproj\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WebAPI/WebAPI.csproj\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"DpaMonitoringSettings\">\r\n    <option name=\"autoShow\" value=\"false\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Hamza-Bek&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Hamza-Bek/TodoIt.git&quot;,\r\n    &quot;accountId&quot;: &quot;93d166b8-a2c8-4291-ac19-571d3757bc74&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/7e7903867c044f1ab43846b2f1406035c910/5e/722d917c/IConfiguration.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/a6b7f037ba7b44df80b8d3aa7e58eeb2e8e938/4e/0aeabc4a/ExceptionDispatchInfo.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/dffdaf205cf54e098aa7d66ba76b38621de920/19/cbf0b8a4/ControllerFactoryProvider.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/Infrastructure/Repositories/FolderRepository.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/RepositoryUnitTests/TodoRepositoryTests.cs\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MetaFilesCheckinStateConfiguration\" checkMetaFiles=\"true\" />\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2swZKbA2ntlZ3CYuuOVXj37qUHc\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \".NET Launch Settings Profile.WebAPI: http.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"test/note-unit-tests\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\".NET Launch Settings Profile.WebAPI: http\">\r\n    <configuration name=\"WebAPI: http\" type=\"LaunchSettings\" factoryName=\".NET Launch Settings Profile\" temporary=\"true\">\r\n      <option name=\"LAUNCH_PROFILE_PROJECT_FILE_PATH\" value=\"$PROJECT_DIR$/WebAPI/WebAPI.csproj\" />\r\n      <option name=\"LAUNCH_PROFILE_TFM\" value=\"net9.0\" />\r\n      <option name=\"LAUNCH_PROFILE_NAME\" value=\"http\" />\r\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\r\n      <option name=\"USE_MONO\" value=\"0\" />\r\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\r\n      <option name=\"GENERATE_APPLICATIONHOST_CONFIG\" value=\"1\" />\r\n      <option name=\"SHOW_IIS_EXPRESS_OUTPUT\" value=\"0\" />\r\n      <option name=\"SEND_DEBUG_REQUEST\" value=\"1\" />\r\n      <option name=\"ADDITIONAL_IIS_EXPRESS_ARGUMENTS\" value=\"\" />\r\n      <method v=\"2\">\r\n        <option name=\"Build\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n        <item itemvalue=\".NET Launch Settings Profile.WebAPI: http\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"Implement methods for the Note management\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739371817162</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739371817162</updated>\r\n    </task>\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e263bb07-a9de-46f0-b96e-a9ab1505e321\" name=\"Changes\" comment=\"Implement methods for the Note management\" />\r\n      <created>1740265628541</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1740265628541</updated>\r\n      <workItem from=\"1740265631432\" duration=\"6711000\" />\r\n      <workItem from=\"1740272509636\" duration=\"1996000\" />\r\n      <workItem from=\"1740334608360\" duration=\"6953000\" />\r\n      <workItem from=\"1740542430458\" duration=\"609000\" />\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\r\n  <component name=\"UnityProjectConfiguration\" hasMinimizedUI=\"false\" />\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Implement methods for the Note management\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Implement methods for the Note management\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.TodoIt/.idea/workspace.xml b/.idea/.idea.TodoIt/.idea/workspace.xml
--- a/.idea/.idea.TodoIt/.idea/workspace.xml	(revision c05f1c8ea06ae9c2bd62a6213ae9e599eeb1f3a5)
+++ b/.idea/.idea.TodoIt/.idea/workspace.xml	(date 1740614391916)
@@ -9,9 +9,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e263bb07-a9de-46f0-b96e-a9ab1505e321" name="Changes" comment="Implement rate limiting with Fixed Window strategy">
-      <change beforePath="$PROJECT_DIR$/.idea/.idea.TodoIt/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.TodoIt/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/TodoIt.sln" beforeDir="false" afterPath="$PROJECT_DIR$/TodoIt.sln" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/WebAPI/Controllers/TodosController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/WebAPI/Controllers/TodosController.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/WebAPI/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/WebAPI/Program.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/WebAPI/WebAPI.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/WebAPI/WebAPI.csproj" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/WebAPI/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/WebAPI/appsettings.json" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -47,6 +48,8 @@
     <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/dffdaf205cf54e098aa7d66ba76b38621de920/19/cbf0b8a4/ControllerFactoryProvider.cs" root0="SKIP_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/Infrastructure/Repositories/FolderRepository.cs" root0="FORCE_HIGHLIGHTING" />
     <setting file="file://$PROJECT_DIR$/RepositoryUnitTests/TodoRepositoryTests.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="mock://E:/2025's projects/TodoIt/WebAPI/Program.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="mock://E:/2025's projects/TodoIt/WebAPI/appsettings.json" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
   <component name="ProjectColorInfo">{
@@ -60,7 +63,7 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     ".NET Launch Settings Profile.WebAPI: http.executor": "Run",
-    "git-widget-placeholder": "test/note-unit-tests",
+    "git-widget-placeholder": "refactor/rate-limiter",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
Index: WebAPI/appsettings.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"Logging\": {\r\n    \"LogLevel\": {\r\n      \"Default\": \"Information\",\r\n      \"Microsoft.AspNetCore\": \"Warning\"\r\n    }\r\n  },\r\n  \"AllowedHosts\": \"*\",\r\n  \"Password\": {\r\n    \"RequiredLength\": 6,\r\n    \"RequireUniqueChars\": false,\r\n    \"RequireNonAlphanumeric\": false,\r\n    \"RequireUppercase\": false,\r\n    \"RequireDigit\": true,\r\n    \"RequireLowercase\": true\r\n  },\r\n  \"Lockout\": {\r\n    \"AllowedForNewUsers\": true,\r\n    \"DefaultLockoutTimeSpan\": 5,\r\n    \"MaxFailedAccessAttempts\": 3\r\n  },\r\n  \"Jwt\": {\r\n    \"Secret\": null,\r\n    \"Issuer\": \"http://localhost:5162\",\r\n    \"Audience\": \"http://localhost:5162\",\r\n    \"AccessTokenLifetime\": 1,\r\n    \"RefreshTokenLifetime\": 720,\r\n    \"ValidateIssuer\": false,\r\n    \"ValidateAudience\": false,\r\n    \"ValidateLifetime\": true,\r\n    \"ValidateIssuerSigningKey\": true\r\n  },\r\n  \"RefreshToken\": {\r\n    \"RefreshTokenLength\": 256,\r\n    \"LifetimeInDays\": 30,\r\n    \"ReuseTokenAllowed\": false\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/WebAPI/appsettings.json b/WebAPI/appsettings.json
--- a/WebAPI/appsettings.json	(revision c05f1c8ea06ae9c2bd62a6213ae9e599eeb1f3a5)
+++ b/WebAPI/appsettings.json	(date 1740612072166)
@@ -2,7 +2,8 @@
   "Logging": {
     "LogLevel": {
       "Default": "Information",
-      "Microsoft.AspNetCore": "Warning"
+      "Microsoft.AspNetCore": "Warning",
+      "Microsoft.AspNetCore.RateLimiting": "Debug"
     }
   },
   "AllowedHosts": "*",
